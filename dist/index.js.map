{"version":3,"sources":["../src/index.ts","../src/logging/logger.ts","../src/logging/loggedAxios.ts"],"sourcesContent":["import logger, { middlewares } from './logging/logger'\nimport loggedAxios from './logging/loggedAxios'\nimport * as axiosTypes from 'axios'\n\nexport { logger, loggedAxios, axiosTypes, middlewares as loggerMiddlewares }\n","import pino from 'pino'\nimport pinoElastic from 'pino-elasticsearch'\nimport { multistream } from 'pino-multi-stream'\nimport pretty from 'pino-pretty'\nimport Koa from 'koa'\nimport { randomUUID } from 'crypto'\n\nconst streamToElastic = pinoElastic({\n  index: 'onecore-logging',\n  node: process.env.ELASTICSEARCH_LOGGING_HOST || 'http://localhost:9200',\n  esVersion: 8,\n  flushBytes: 100,\n  flushInterval: 1000,\n})\n\nstreamToElastic.on('error', (error: any) => console.log(error))\nstreamToElastic.on('insertError', (error: any) => console.log(error))\n\nconst prettyStream = pretty({\n  colorize: true,\n  ignore: 'application,request',\n  singleLine: true,\n  messageFormat: '{msg} {request.path} {request.status}',\n})\n\nconst pinoOptions = {}\n\nconst logger = pino(\n  pinoOptions,\n  multistream([{ stream: prettyStream }, { stream: streamToElastic }])\n).child({ application: { name: 'core', environment: process.env.NODE_ENV } })\n\nexport default logger\n\nconst getCorrelationId = (\n  ctx: Koa.ParameterizedContext<Koa.DefaultState, Koa.DefaultContext, any>\n) => {\n  return ctx.header['x-correlation-id'] ?? randomUUID()\n}\n\nexport const middlewares = {\n  pre: (\n    ctx: Koa.ParameterizedContext<Koa.DefaultState, Koa.DefaultContext, any>,\n    next: Koa.Next\n  ) => {\n    if (ctx.path !== '/health') {\n      ctx.logger = logger.child({ correlationId: getCorrelationId(ctx) })\n\n      ctx.logger.info(\n        {\n          request: {\n            path: ctx.path,\n            user: ctx.state?.user,\n            method: ctx.method,\n          },\n        },\n        'Incoming request'\n      )\n    }\n\n    return next()\n  },\n  post: async (\n    ctx: Koa.ParameterizedContext<Koa.DefaultState, Koa.DefaultContext, any>,\n    next: Koa.Next\n  ) => {\n    await next()\n\n    if (ctx.path !== '/health') {\n      ctx.logger.info(\n        {\n          request: {\n            path: ctx.path,\n            user: ctx.state?.user,\n            method: ctx.method,\n            status: ctx.status,\n          },\n        },\n        'Incoming request complete'\n      )\n    }\n  },\n}\n","import axios from 'axios'\nimport logger from './logger'\n\nconst instance = axios.create()\n\ninstance.interceptors.request.use((request) => {\n  const requestFields = {\n    url: request.url,\n    headers: request.headers,\n    method: request.method,\n  }\n\n  logger.info(\n    requestFields,\n    `Outgoing request: ${request.method?.toUpperCase()} ${request.url}`\n  )\n  return request\n})\n\ninstance.interceptors.response.use((response) => {\n  const responseFields = {\n    status: response.status,\n    headers: response.headers,\n    url: response.config.url,\n  }\n  logger.info(\n    responseFields,\n    `Outgoing response: ${response.config.method?.toUpperCase()} ${\n      response.config.url\n    } ${response.status}`\n  )\n  return response\n})\n\nexport default instance\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,kBAAiB;AACjB,gCAAwB;AACxB,+BAA4B;AAC5B,yBAAmB;AAEnB,oBAA2B;AAE3B,IAAM,sBAAkB,0BAAAA,SAAY;AAAA,EAClC,OAAO;AAAA,EACP,MAAM,QAAQ,IAAI,8BAA8B;AAAA,EAChD,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,eAAe;AACjB,CAAC;AAED,gBAAgB,GAAG,SAAS,CAAC,UAAe,QAAQ,IAAI,KAAK,CAAC;AAC9D,gBAAgB,GAAG,eAAe,CAAC,UAAe,QAAQ,IAAI,KAAK,CAAC;AAEpE,IAAM,mBAAe,mBAAAC,SAAO;AAAA,EAC1B,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,eAAe;AACjB,CAAC;AAED,IAAM,cAAc,CAAC;AAErB,IAAM,aAAS,YAAAC;AAAA,EACb;AAAA,MACA,sCAAY,CAAC,EAAE,QAAQ,aAAa,GAAG,EAAE,QAAQ,gBAAgB,CAAC,CAAC;AACrE,EAAE,MAAM,EAAE,aAAa,EAAE,MAAM,QAAQ,aAAa,QAAQ,IAAI,SAAS,EAAE,CAAC;AAE5E,IAAO,iBAAQ;AAEf,IAAM,mBAAmB,CACvB,QACG;AApCL;AAqCE,UAAO,SAAI,OAAO,kBAAkB,MAA7B,gBAAkC,0BAAW;AACtD;AAEO,IAAM,cAAc;AAAA,EACzB,KAAK,CACH,KACA,SACG;AA5CP;AA6CI,QAAI,IAAI,SAAS,WAAW;AAC1B,UAAI,SAAS,OAAO,MAAM,EAAE,eAAe,iBAAiB,GAAG,EAAE,CAAC;AAElE,UAAI,OAAO;AAAA,QACT;AAAA,UACE,SAAS;AAAA,YACP,MAAM,IAAI;AAAA,YACV,OAAM,SAAI,UAAJ,mBAAW;AAAA,YACjB,QAAQ,IAAI;AAAA,UACd;AAAA,QACF;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAEA,WAAO,KAAK;AAAA,EACd;AAAA,EACA,MAAM,CACJ,KACA,SACG;AAjEP;AAkEI,UAAM,KAAK;AAEX,QAAI,IAAI,SAAS,WAAW;AAC1B,UAAI,OAAO;AAAA,QACT;AAAA,UACE,SAAS;AAAA,YACP,MAAM,IAAI;AAAA,YACV,OAAM,SAAI,UAAJ,mBAAW;AAAA,YACjB,QAAQ,IAAI;AAAA,YACZ,QAAQ,IAAI;AAAA,UACd;AAAA,QACF;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;;;AClFA,mBAAkB;AAGlB,IAAM,WAAW,aAAAC,QAAM,OAAO;AAE9B,SAAS,aAAa,QAAQ,IAAI,CAAC,YAAY;AAL/C;AAME,QAAM,gBAAgB;AAAA,IACpB,KAAK,QAAQ;AAAA,IACb,SAAS,QAAQ;AAAA,IACjB,QAAQ,QAAQ;AAAA,EAClB;AAEA,iBAAO;AAAA,IACL;AAAA,IACA,sBAAqB,aAAQ,WAAR,mBAAgB,aAAa,IAAI,QAAQ,GAAG;AAAA,EACnE;AACA,SAAO;AACT,CAAC;AAED,SAAS,aAAa,SAAS,IAAI,CAAC,aAAa;AAnBjD;AAoBE,QAAM,iBAAiB;AAAA,IACrB,QAAQ,SAAS;AAAA,IACjB,SAAS,SAAS;AAAA,IAClB,KAAK,SAAS,OAAO;AAAA,EACvB;AACA,iBAAO;AAAA,IACL;AAAA,IACA,uBAAsB,cAAS,OAAO,WAAhB,mBAAwB,aAAa,IACzD,SAAS,OAAO,GAClB,IAAI,SAAS,MAAM;AAAA,EACrB;AACA,SAAO;AACT,CAAC;AAED,IAAO,sBAAQ;;;AFhCf,iBAA4B;","names":["pinoElastic","pretty","pino","axios"]}