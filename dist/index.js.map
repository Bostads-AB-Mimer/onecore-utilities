{"version":3,"sources":["../src/index.ts","../src/logging/logger.ts","../src/logging/loggingStorage.ts","../src/logging/loggedAxios.ts","../src/routes/generateRouteMetadata.ts"],"sourcesContent":["import { logger, middlewares } from './logging/logger'\nimport loggedAxios, { setExclusionFilters } from './logging/loggedAxios'\nimport { storage, getCorrelationId } from './logging/loggingStorage'\nimport { generateRouteMetadata } from './routes/generateRouteMetadata'\nimport * as axiosTypes from 'axios'\n\nexport {\n  logger,\n  loggedAxios,\n  generateRouteMetadata,\n  axiosTypes,\n  setExclusionFilters as setAxiosExclusionFilters,\n  storage as loggingStorage,\n  getCorrelationId,\n  middlewares as loggerMiddlewares,\n}\n","import pino from 'pino'\nimport pinoElastic from 'pino-elasticsearch'\nimport { multistream } from 'pino-multi-stream'\nimport pretty from 'pino-pretty'\nimport Koa from 'koa'\nimport { randomUUID } from 'crypto'\nimport {\n  storage,\n  getCorrelationId as getCorrelationIdFromStorage,\n} from './loggingStorage'\n\nconst streamToElastic = pinoElastic({\n  index: 'onecore-logging',\n  node: process.env.ELASTICSEARCH_LOGGING_HOST || 'http://localhost:9200',\n  esVersion: 8,\n  flushBytes: 100,\n  flushInterval: 1000,\n})\n\nstreamToElastic.on('error', (error: any) => console.log(error))\nstreamToElastic.on('insertError', (error: any) => console.log(error))\n\nconst prettyStream = pretty({\n  colorize: true,\n  ignore: 'application,request',\n  singleLine: true,\n  messageFormat: '{msg} {request.method} {request.path} {request.status}',\n})\n\nconst pinoOptions = {\n  mixin() {\n    return { correlationId: getCorrelationIdFromStorage() }\n  },\n}\n\nconst childProperties = {\n  application: {\n    name: process.env.APPLICATION_NAME || 'application',\n    environment: process.env.NODE_ENV,\n  },\n}\n\nexport const logger = pino(\n  pinoOptions,\n  multistream([{ stream: prettyStream }, { stream: streamToElastic }])\n).child(childProperties)\n\nconst getCorrelationId = (\n  ctx: Koa.ParameterizedContext<Koa.DefaultState, Koa.DefaultContext, any>\n) => {\n  return ctx.header['x-correlation-id'] ?? randomUUID()\n}\n\nexport const middlewares = {\n  pre: async (\n    ctx: Koa.ParameterizedContext<Koa.DefaultState, Koa.DefaultContext, any>,\n    next: Koa.Next\n  ) => {\n    const correlationId = getCorrelationId(ctx)\n\n    ctx.correlationId = correlationId\n    if (ctx.path !== '/health') {\n      ctx.logger = logger.child({ correlationId: ctx.correlationId })\n\n      ctx.logger.info(\n        {\n          request: {\n            path: ctx.path,\n            method: ctx.method,\n            ip: ctx.request.ip,\n          },\n        },\n        'Incoming request'\n      )\n    }\n\n    if (storage) {\n      await storage.run({ correlationId: correlationId }, async () => {\n        return await next()\n      })\n    } else {\n      return await next()\n    }\n  },\n  post: async (\n    ctx: Koa.ParameterizedContext<Koa.DefaultState, Koa.DefaultContext, any>,\n    next: Koa.Next\n  ) => {\n    await next()\n\n    if (ctx.path !== '/health') {\n      ctx.logger.info(\n        {\n          request: {\n            path: ctx.path,\n            user: ctx.state?.user,\n            method: ctx.method,\n            status: ctx.status,\n          },\n        },\n        'Incoming request complete'\n      )\n    }\n  },\n}\n","import { AsyncLocalStorage } from 'async_hooks'\n\nexport const storage = new AsyncLocalStorage()\n\nexport const getCorrelationId = (): string | undefined | null => {\n  const store = storage.getStore()\n\n  if (store) {\n    const correlationId = (store as { correlationId: string }).correlationId\n\n    return correlationId\n  } else {\n    return undefined\n  }\n}\n","import axios from 'axios'\nimport { logger } from './logger'\nimport { storage } from './loggingStorage'\n\nconst getCorrelationId = (): string | undefined | null => {\n  if (storage && storage.getStore()) {\n    const correlationId = (storage.getStore() as { correlationId: string })\n      .correlationId\n\n    return correlationId\n  }\n\n  return null\n}\n\nlet loggingExlusionFilters: RegExp[] | null = null\n\nexport const setExclusionFilters = (exlusionFilters: RegExp[]) => {\n  loggingExlusionFilters = exlusionFilters\n}\n\nconst isUrlExcluded = (url: string | undefined) => {\n  if (loggingExlusionFilters) {\n    const isExcluded = loggingExlusionFilters.some((exclusionFilter) => {\n      if (url && exclusionFilter.test(url)) {\n        return true\n      } else {\n        return false\n      }\n    })\n\n    return isExcluded\n  }\n\n  return false\n}\n\naxios.interceptors.request.use((request) => {\n  if (isUrlExcluded(request.url)) {\n    return request\n  }\n\n  const correlationId = getCorrelationId()\n\n  if (correlationId) {\n    request.headers['x-correlation-id'] = correlationId\n  }\n\n  const requestFields = {\n    url: request.url,\n    headers: request.headers,\n    method: request.method,\n    correlationId: request.headers['x-correlation-id'],\n  }\n\n  logger.info(\n    requestFields,\n    `HTTP request: ${request.method?.toUpperCase()} ${request.url}`\n  )\n\n  return request\n})\n\naxios.interceptors.response.use((response) => {\n  if (isUrlExcluded(response.config.url)) {\n    return response\n  }\n\n  const correlationId = getCorrelationId()\n\n  const responseFields = {\n    status: response.status,\n    headers: response.headers,\n    url: response.config.url,\n    correlationId,\n  }\n  logger.info(\n    responseFields,\n    `HTTP response: ${response.config.method?.toUpperCase()} ${\n      response.config.url\n    } ${response.status}`\n  )\n  return response\n})\n\nexport default axios\n","import { Context as KoaContext } from 'koa'\n\ninterface RouteMetadata {\n  _links: {\n    self: {\n      href: string\n    }\n    link: {\n      href: string\n      templated: boolean\n    }\n  }\n}\n\n// Utility function to generate metadata with HATEOAS links\nexport const generateRouteMetadata = (\n  ctx: KoaContext,\n  queryParams?: string[]\n): RouteMetadata => {\n  const baseUrl = `${ctx.protocol}://${ctx.host}`\n  const pathWithParamsKeys = Object.keys(ctx.params).reduce(\n    (path, key) => path.replace(ctx.params[key], `{${key}}`),\n    ctx.path\n  )\n  const templated =\n    Object.keys(ctx.params).length > 0 || (queryParams?.length ?? 0) > 0\n\n  const queryPlaceholders =\n    queryParams && queryParams.length > 0\n      ? '?' + queryParams.map((param) => `${param}={${param}}`).join('&')\n      : ''\n\n  return {\n    _links: {\n      self: {\n        href: ctx.href,\n      },\n      link: {\n        href: `${baseUrl}${pathWithParamsKeys}${queryPlaceholders}`,\n        templated: templated,\n      },\n    },\n  }\n}\n"],"mappings":"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","names":["pinoElastic","pretty","pino","getCorrelationId","getCorrelationId","axios"]}